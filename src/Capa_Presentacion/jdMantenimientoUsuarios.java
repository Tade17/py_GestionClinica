/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Capa_Presentacion;

import Capa_Datos.clsJDBC;
import Capa_Negocio.clsUsuario;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MendozaGastulo_Tadeo
 */
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class jdMantenimientoUsuarios extends javax.swing.JDialog {

    /**
     * Creates new form jdMantUsuarios
     */
    public jdMantenimientoUsuarios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        lblDniMedico.setVisible(false);
        txtDniMedico.setVisible(false);
        lblMed.setVisible(false);
        lblMedico1.setVisible(false);
        lblDniAdministrador.setVisible(false);
        txtDniAddministrador.setVisible(false);
        lblNombreAdministrador.setVisible(false);
        lblAdministrador.setVisible(false);
        listar();
        chkVigencia.setBackground(null);

    }
    clsUsuario objUser = new clsUsuario();
    clsJDBC objConectar = new clsJDBC();
    ResultSet rs = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void listar() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("idUsuario");
            modelo.addColumn("nombre_usuario");
            modelo.addColumn("correo");
            modelo.addColumn("vigencia");
            modelo.addColumn("rol");
            rs = objUser.listarUsuario();

            String vig = "";

            Object datos[][] = new Object[1][5];
            while (rs.next()) {
                if (rs.getString("vigencia").equals("t")) {
                    vig = "Vigente";
                } else {
                    vig = "No vigente";
                }
                datos[0][0] = rs.getInt("idUsuario");
                datos[0][1] = rs.getString("nombre_usuario");
                datos[0][2] = rs.getString("correo");
                datos[0][3] = vig;
                datos[0][4] = rs.getString("rol");
                modelo.addRow(datos[0]);
            }
            tblUser.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblDniAdministrador = new javax.swing.JLabel();
        txtDniAddministrador = new javax.swing.JTextField();
        txtNomUser = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        chkVigencia = new javax.swing.JCheckBox();
        txtContra = new javax.swing.JPasswordField();
        cboRol = new javax.swing.JComboBox<>();
        txtDniMedico = new javax.swing.JTextField();
        lblMed = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        lblNombreAdministrador = new javax.swing.JLabel();
        lblDniMedico = new javax.swing.JLabel();
        lblAdministrador = new javax.swing.JLabel();
        lblMedico1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnDarBaja = new javax.swing.JButton();
        btnEli = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setText("Nombre de Usuario:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setText("Id:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("Vigencia:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setText("Contraseña:");

        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setText("Correo:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel7.setText("Rol:");

        lblDniAdministrador.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblDniAdministrador.setText("DNI administrador");

        txtDniAddministrador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDniAddministradorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniAddministradorKeyTyped(evt);
            }
        });

        chkVigencia.setText("Vigencia");
        chkVigencia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkVigenciaStateChanged(evt);
            }
        });

        cboRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "administrador", "medico" }));
        cboRol.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboRolItemStateChanged(evt);
            }
        });

        txtDniMedico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDniMedicoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniMedicoKeyTyped(evt);
            }
        });

        lblMed.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblMed.setText("Nombre ");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/3069190_search_research_icon.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblNombreAdministrador.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblNombreAdministrador.setText("Nombre ");

        lblDniMedico.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblDniMedico.setText("DNI médico");

        lblAdministrador.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N

        lblMedico1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnBuscar))
                            .addComponent(cboRol, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDniAdministrador)
                            .addComponent(lblNombreAdministrador))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDniAddministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMed)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(lblDniMedico))))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDniMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMedico1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(jLabel1))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtContra)
                            .addComponent(txtCorreo)
                            .addComponent(txtNomUser, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(chkVigencia, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBuscar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cboRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDniMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDniMedico))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMed)
                            .addComponent(lblMedico1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDniAddministrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDniAdministrador)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtNomUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(chkVigencia))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNombreAdministrador)
                    .addComponent(lblAdministrador, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(150, 150, 150))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnNuevo.setBackground(new java.awt.Color(153, 255, 255));
        btnNuevo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/registrarCliente.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(153, 255, 255));
        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/modificarCliente.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnDarBaja.setBackground(new java.awt.Color(153, 255, 255));
        btnDarBaja.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDarBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/46808_idea_user_icon.png"))); // NOI18N
        btnDarBaja.setText("Dar de Baja");
        btnDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaActionPerformed(evt);
            }
        });

        btnEli.setBackground(new java.awt.Color(153, 255, 255));
        btnEli.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/eliminarCliente.png"))); // NOI18N
        btnEli.setText("Eliminar");
        btnEli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(153, 255, 255));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/limpiarMarca.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDarBaja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addGap(18, 18, 18)
                .addComponent(btnDarBaja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEli)
                .addGap(28, 28, 28)
                .addComponent(btnLimpiar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void limpiar() {
        txtContra.setText("");
        txtCorreo.setText("");
        txtId.setText("");
        txtNomUser.setText("");
        txtDniAddministrador.setText("");
        cboRol.setSelectedIndex(0);
        chkVigencia.setSelected(false);

    }
    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtId.getText().trim().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIdKeyTyped

    private void obtenerUusario() {
        try {
            if (cboRol.getSelectedIndex() == 2) {
                lblDniMedico.setVisible(true);
                txtDniMedico.setVisible(true);
                lblMed.setVisible(true);
                lblMedico1.setVisible(true);
                lblDniAdministrador.setVisible(false);
                txtDniAddministrador.setVisible(false);
                lblNombreAdministrador.setVisible(false);
                lblAdministrador.setVisible(false);
            } else if (cboRol.getSelectedIndex() == 1) {
                lblDniMedico.setVisible(false);
                txtDniMedico.setVisible(false);
                lblMed.setVisible(false);
                lblMedico1.setVisible(false);
                lblDniAdministrador.setVisible(true);
                txtDniAddministrador.setVisible(true);
                lblNombreAdministrador.setVisible(true);
                lblAdministrador.setVisible(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }

    }


    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        try {
            if (btnNuevo.getText().equalsIgnoreCase("nuevo")) {
                limpiar();
                txtId.setText(String.valueOf(objUser.generarIdUser()));
                txtId.setEditable(false);
                JOptionPane.showMessageDialog(rootPane, "Completa los datos para el registro del usuario");
                btnNuevo.setText("Guardar");
            } else {
                if (validarCampos()) {
                    Integer idMedico = null;
                    Integer idAdministrador = null;

                    if (cboRol.getSelectedItem().toString().equalsIgnoreCase("medico")) {
                        idMedico = objUser.obtenerIdMed(txtDniMedico.getText());
                        if (idMedico == null) {
                            throw new Exception("No se encontró el médico con el DNI proporcionado");
                        }
                    } else if (cboRol.getSelectedItem().toString().equalsIgnoreCase("administrador")) {
                        idAdministrador = objUser.obtenerIdAdm(txtDniAddministrador.getText());
                        if (idAdministrador == null) {
                            throw new Exception("No se encontró el administrador con el DNI proporcionado");
                        }
                    }

                    objUser.insertarNuevoUsuario(
                            Integer.valueOf(txtId.getText()),
                            txtNomUser.getText(),
                            txtContra.getText(),
                            txtCorreo.getText(),
                            chkVigencia.isSelected(),
                            cboRol.getSelectedItem().toString(),
                            idMedico,
                            idAdministrador
                    );

                    listar();
                    JOptionPane.showMessageDialog(rootPane, "Usuario registrado exitosamente");
                    btnNuevo.setText("Nuevo");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnNuevoActionPerformed
    /*if (cboRol.getSelectedItem().toString().equals("medico")){
                        objUser.insertarNuevoUsuario(Integer.valueOf(txtId.getText()), txtNomUser.getText(), txtContra.getText(), txtCorreo.getText(),
                                chkVigencia.isSelected(), cboRol.getSelectedItem().toString(), idMedico, null);
                    }else{
                        objUser.insertarNuevoUsuario(Integer.valueOf(txtId.getText()), txtNomUser.getText(), txtContra.getText(), txtCorreo.getText(),
                                chkVigencia.isSelected(), cboRol.getSelectedItem().toString(), null, idAdministrador);
                    }*/
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:try
        try {

            if (txtId.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese su número de ID");
            } else {
                Object datos[] = {"Si", "No"};
                int select = JOptionPane.showOptionDialog(rootPane, "Desea modificar este usuario?", "MENSAJE DEL SISTEMA", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, datos, datos[0]);
                if (select == 0) {

                    objUser.modificarUusario(Integer.valueOf(txtId.getText()), txtNomUser.getText(), txtContra.getText(), txtCorreo.getText(), this.chkVigencia.isSelected());
                    JOptionPane.showMessageDialog(rootPane, "Usuario modificado");
                    listar();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Operacion cancelada");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void cboRolItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboRolItemStateChanged
        // TODO add your handling code here:
        obtenerUusario();
    }//GEN-LAST:event_cboRolItemStateChanged

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            if (txtId.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese su número de ID");
                return;
            }

            Integer idUsuario = Integer.valueOf(txtId.getText());
            boolean ex = objUser.existencia(idUsuario);

            if (!ex) {
                JOptionPane.showMessageDialog(rootPane, "Usuario inexistente");
                return;
            }

            rs = objUser.buscarUser(idUsuario);
            if (rs.next()) {
                txtNomUser.setText(rs.getString("nombre_usuario"));
                txtCorreo.setText(rs.getString("correo"));
                String rol = rs.getString("rol");
                cboRol.setSelectedItem(rol);
                chkVigencia.setSelected(rs.getBoolean("vigencia"));
                txtContra.setText(rs.getString("contraseña"));

                String dni = objUser.obtenerDniPorIdUsuario(idUsuario);
                if (dni != null) {
                    if (rol.equalsIgnoreCase("medico")) {
                        txtDniMedico.setText(dni);
                        txtDniAddministrador.setText("");
                    } else if (rol.equalsIgnoreCase("administrador")) {
                        txtDniAddministrador.setText(dni);
                        txtDniMedico.setText("");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        // TODO add your handling code here:
        try {
            txtId.setText(String.valueOf(tblUser.getValueAt(tblUser.getSelectedRow(), 0)));

            btnBuscarActionPerformed(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaActionPerformed
        // TODO add your handling code here:
        try {
            boolean ex = objUser.existencia(Integer.valueOf(txtId.getText()));

            if (txtId.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese su número de ID");
            } else if (!ex) {
                JOptionPane.showMessageDialog(rootPane, "Usuario inexistente");
            } else {
                Object datos[] = {"Si", "No"};
                int select = JOptionPane.showOptionDialog(rootPane, "Desea modificar este usuario?", "MENSAJE DEL SISTEMA", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, datos, datos[0]);
                if (select == 0) {
                    objUser.darDeBajaUsuario(Integer.valueOf(txtId.getText()));
                    listar();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Operacion cancelada");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_btnDarBajaActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliActionPerformed
        // TODO add your handling code here:
        try {
            boolean ex = objUser.existencia(Integer.valueOf(txtId.getText()));

            if (txtId.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese su número de ID");
            } else if (!ex) {
                JOptionPane.showMessageDialog(rootPane, "Usuario inexistente");
            } else {
                Object datos[] = {"Si", "No"};
                int select = JOptionPane.showOptionDialog(rootPane, "Desea eliminar este usuario?", "MENSAJE DEL SISTEMA", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, datos, datos[0]);
                if (select == 0) {
                    objUser.eliminarUsuario(Integer.parseInt(txtId.getText()));
                    listar();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Operacion cancelada");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }

    }//GEN-LAST:event_btnEliActionPerformed

    private void chkVigenciaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkVigenciaStateChanged
        // TODO add your handling code here:
        if (chkVigencia.isSelected()) {
            chkVigencia.setText("Vigente");
            chkVigencia.setBackground(null);
        } else {
            chkVigencia.setText("No vigente");
        }
    }//GEN-LAST:event_chkVigenciaStateChanged

    private boolean validarCampos() {
        if (txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un ID para el usuario.");
            return false;
        }
        if (txtNomUser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe elegir el nombre para el usuario.");
            return false;
        }
        if (txtCorreo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el correo.");
            return false;
        }
        if (txtContra.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar la contraseña.");
            return false;
        }
        if (cboRol.getSelectedItem() == null || cboRol.getSelectedItem().equals("Seleccione")) {
            JOptionPane.showMessageDialog(this, "Debe elegir el rol del usuario.");
            return false;
        }

        String rol = cboRol.getSelectedItem().toString().toLowerCase();
        if (rol.equals("medico")) {
            if (txtDniMedico.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe ingresar el DNI del médico.");
                return false;
            }
            if (lblMedico1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontró al médico para registrar el nuevo usuario.");
                return false;
            }
        } else if (rol.equals("administrador")) {
            if (txtDniAddministrador.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Debe ingresar el DNI del administrador.");
                return false;
            }
            if (lblAdministrador.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se encontró al administrador para registrar el nuevo usuario.");
                return false;
            }
        }

        return true;
    }
    private void txtDniAddministradorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniAddministradorKeyTyped
        int key = evt.getKeyChar();

        boolean num = key >= 48 && key <= 57;
        if (!num) {
            evt.consume();

        }
        if (txtDniMedico.getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDniAddministradorKeyTyped

    private void txtDniMedicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniMedicoKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean num = key >= 48 && key <= 57;
        if (!num) {
            evt.consume();

        }
        if (txtDniMedico.getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDniMedicoKeyTyped

    private void txtDniMedicoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniMedicoKeyReleased
        String dni = txtDniMedico.getText();
        if (txtDniMedico.getText().isEmpty()) {
            lblMedico1.setText("");
        } else {
            try {
                lblMedico1.setText(objUser.mostrarMedico(dni));
            } catch (Exception ex) {
                Logger.getLogger(jdMantenimientoUsuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_txtDniMedicoKeyReleased

    private void txtDniAddministradorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniAddministradorKeyReleased
        String dni = txtDniAddministrador.getText();
        if (txtDniAddministrador.getText().isEmpty()) {
            lblAdministrador.setText("");
        } else {
            try {
                lblAdministrador.setText(objUser.mostrarAdministrador(dni));
            } catch (Exception ex) {
                Logger.getLogger(jdMantenimientoUsuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txtDniAddministradorKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDarBaja;
    private javax.swing.JButton btnEli;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cboRol;
    private javax.swing.JCheckBox chkVigencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAdministrador;
    private javax.swing.JLabel lblDniAdministrador;
    private javax.swing.JLabel lblDniMedico;
    private javax.swing.JLabel lblMed;
    private javax.swing.JLabel lblMedico1;
    private javax.swing.JLabel lblNombreAdministrador;
    private javax.swing.JTable tblUser;
    private javax.swing.JPasswordField txtContra;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDniAddministrador;
    private javax.swing.JTextField txtDniMedico;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomUser;
    // End of variables declaration//GEN-END:variables
}
