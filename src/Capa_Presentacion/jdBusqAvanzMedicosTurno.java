/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Capa_Presentacion;

import Capa_Negocio.clsEspecialidad;
import Capa_Negocio.clsMedico;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;

/**
 *
 * @author MendozaGastulo_Tadeo
 */
public class jdBusqAvanzMedicosTurno extends javax.swing.JDialog {

    clsMedico objMed = new clsMedico();
    clsEspecialidad objEspecialidad = new clsEspecialidad();
    private String dniMedico = "";
    private String nombreMedico = "";

    public jdBusqAvanzMedicosTurno(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listarEspecialidades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();
        cboEspecialidades = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));

        tblLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLista);

        cboEspecialidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboEspecialidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEspecialidadesActionPerformed(evt);
            }
        });
        cboEspecialidades.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cboEspecialidadesKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/8960624_stethoscopes_stethoscope_doctor_health_healthcare_icon.png"))); // NOI18N
        jLabel1.setText("Especialidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cboEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboEspecialidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEspecialidadesActionPerformed
        // TODO add your handling code here:
        String especialidadSeleccionada = cboEspecialidades.getSelectedItem().toString();
        filtrarMedicosPorEspecialidad(especialidadSeleccionada);

    }//GEN-LAST:event_cboEspecialidadesActionPerformed

    private void tblListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = tblLista.getSelectedRow();
        if (filaSeleccionada != -1) {
            dniMedico = tblLista.getValueAt(filaSeleccionada, 1).toString();
            nombreMedico = tblLista.getValueAt(filaSeleccionada, 2).toString();
            int confirm = JOptionPane.showConfirmDialog(this,
                    "¿Deseas escoger al  Dr." + nombreMedico + " con dni: " + dniMedico + "?",
                    "Confirmar",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                dispose();
            }
        }
    }//GEN-LAST:event_tblListaMouseClicked

    private void cboEspecialidadesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboEspecialidadesKeyReleased

    }//GEN-LAST:event_cboEspecialidadesKeyReleased

    private void listarMedicos() {
        ResultSet rs = null;
        String vigencia = "";
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("DNI");
        modelo.addColumn("Nombre");
        modelo.addColumn("Ape. Paterno");
        modelo.addColumn("Ape .Materno");
        modelo.addColumn("Fecha de nacimiento");
        modelo.addColumn("correo");
        modelo.addColumn("vigencia");

        try {
            rs = objMed.listarMedicos();
            Object datos[][] = new Object[1][8];
            while (rs.next()) {
                if (rs.getString("vigencia").equals("t")) {
                    vigencia = "Vigente";
                } else {
                    vigencia = "No vigente";
                }
                datos[0][0] = rs.getInt("idMedico");
                datos[0][1] = rs.getString("dni");
                datos[0][2] = rs.getString("nombres");
                datos[0][3] = rs.getString("apellidoPaterno");
                datos[0][4] = rs.getString("apellidoMaterno");
                datos[0][5] = rs.getDate("fecha_nacimiento");
                datos[0][6] = rs.getString("correo");
                datos[0][7] = vigencia;
                modelo.addRow(datos[0]);
            }
            tblLista.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al listar los medicos" + e.getMessage());
        }
    }

    private void listarEspecialidades() {
        ResultSet rs = null;
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        cboEspecialidades.setModel(modelo);
        try {
            rs = objEspecialidad.listarEspecialidades();
            while (rs.next()) {
                modelo.addElement(rs.getString("nombre"));
            }
        } catch (Exception e) {
        }
    }

    private void filtrarMedicosPorEspecialidad(String especialidad) {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("DNI");
        modelo.addColumn("Nombre_Completo");
        modelo.addColumn("Fecha_nacimiento");
        modelo.addColumn("Vigencia");

        tblLista.setModel(modelo);

        try {
            ResultSet rs = objMed.filtrarMedicosPorEspecialidad(especialidad);
            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getInt("idMedico"),
                    rs.getString("dni"),
                    rs.getString("nombreCompleto"),
                    rs.getDate("fecha_nacimiento"),
                    rs.getBoolean("vigencia") ? "Vigente" : "No Vigente"
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al filtrar médicos: " + e.getMessage());
        }
    }

    public String getDniMedico() {
        return dniMedico;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboEspecialidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLista;
    // End of variables declaration//GEN-END:variables
}
